--- ../../../../../portage/sys-apps/microcode-data/microcode-data-20140624.ebuild	2014-06-28 18:13:21.000000000 +0400
+++ ./microcode-data-20140624.ebuild	2014-06-29 16:16:50.964023827 +0400
@@ -4,7 +4,7 @@
 
 EAPI="4"
 
-inherit toolchain-funcs
+inherit linux-info toolchain-funcs
 
 # Find updates by searching and clicking the first link (hopefully it's the one):
 # http://www.intel.com/content/www/us/en/search.html?keyword=Processor+Microcode+Data+File
@@ -17,29 +17,45 @@
 LICENSE="intel-ucode"
 SLOT="0"
 KEYWORDS="-* ~amd64 ~x86"
-IUSE=""
+IUSE="monolitic"
 
-RDEPEND="!<sys-apps/microcode-ctl-1.17-r2" #268586
+RDEPEND="
+	monolitic? ( !<sys-apps/microcode-ctl-1.17-r2 )
+"
 
 S=${WORKDIR}
 
+if ( ! use monolitic); then
+	CONFIG_CHECK="~MICROCODE_INTEL"
+	ERROR_MICROCODE_INTEL="Your kernel needs to support Intel microcode loading. You're suggested to build it as a module as it doesn't require a reboot to reload the microcode, that way."
+fi
+
 src_unpack() {
 	default
-	cp "${FILESDIR}"/intel-microcode2ucode.c ./ || die
+	! use monolitic && ( cp "${FILESDIR}"/intel-microcode2ucode.c ./ || die )
 }
 
 src_compile() {
-	tc-env_build emake intel-microcode2ucode
-	./intel-microcode2ucode microcode.dat || die
+	if ( ! use monolitic ); then
+		tc-env_build emake intel-microcode2ucode
+		./intel-microcode2ucode microcode.dat || die
+	fi
 }
 
 src_install() {
 	insinto /lib/firmware
-	doins -r microcode.dat intel-ucode
+	if ( ! use monolitic ); then
+		doins -r microcode.dat intel-ucode
+	else
+		doins -r intel-ucode
+	fi
 }
 
 pkg_postinst() {
 	elog "The microcode available for Intel CPUs has been updated.  You'll need"
-	elog "to reload the code into your processor.  If you're using the init.d:"
-	elog "/etc/init.d/microcode_ctl restart"
+	elog "to reload the code into your processor."
+	if ( use monolitic ); then
+		elog "If you're using the init.d:"
+		elog "/etc/init.d/microcode_ctl restart"
+	fi
 }
