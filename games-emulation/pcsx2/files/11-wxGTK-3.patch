commit 82c7bcd761d6d64625c39f84daf27259163c8817
Author: Gregory Hainaut <gregory.hainaut@gmail.com>
Date:   Sat Aug 2 13:34:44 2014 +0200

    wx3.0: compilation fix for arch linux
    
    * Manually cast WxGetTranslation
    * Accept string as format parameter of pxWindowTextWriter
    * Manually convert wxString to wide string
    
    Note: Wx setup.h is not the same between Debian and Arch. Unfortunately it
    generated various compilations errors on wx code.
    
    Close issue #172

diff --git a/common/include/Utilities/wxGuiTools.h b/common/include/Utilities/wxGuiTools.h
index 7855566..8068558 100644
--- a/common/include/Utilities/wxGuiTools.h
+++ b/common/include/Utilities/wxGuiTools.h
@@ -677,6 +677,9 @@ protected:
 	int			m_leading;
 
 	virtual void _DoWriteLn( const wxChar* msg );
+#if wxMAJOR_VERSION >= 3
+	void _DoWriteLn( const wxString msg );
+#endif
 	void _DoWrite( const wxChar* msg );
 
 public:
@@ -690,6 +693,9 @@ public:
 	pxWindowTextWriter& WriteLn( const wxChar* fmt );
 	pxWindowTextWriter& SetFont( const wxFont& font );
 	pxWindowTextWriter& Align( const wxAlignment& align );
+#if wxMAJOR_VERSION >= 3
+	pxWindowTextWriter& WriteLn( const wxString fmt );
+#endif
 		
 	pxWindowTextWriter& SetLeading( int lead )
 	{
diff --git a/common/src/Utilities/pxTranslate.cpp b/common/src/Utilities/pxTranslate.cpp
index f38f764..f579a2a 100644
--- a/common/src/Utilities/pxTranslate.cpp
+++ b/common/src/Utilities/pxTranslate.cpp
@@ -26,7 +26,12 @@ bool pxIsEnglish( int id )
 // --------------------------------------------------------------------------------------
 const wxChar* __fastcall pxExpandMsg( const wxChar* englishContent )
 {
+#if wxMAJOR_VERSION >= 3
+	wxString translation = wxGetTranslation( englishContent );
+	return translation.wc_str();
+#else
 	return wxGetTranslation( englishContent );
+#endif
 }
 
 // ------------------------------------------------------------------------
@@ -45,5 +50,10 @@ const wxChar* __fastcall pxGetTranslation( const wxChar* message )
 			Console.WriteLn( Color_Green, L"Message: %s", message );
 		}
 	}
+#if wxMAJOR_VERSION >= 3
+	wxString translation = wxGetTranslation( message );
+	return translation.wc_str();
+#else
 	return wxGetTranslation( message );
+#endif
 }
diff --git a/common/src/Utilities/pxWindowTextWriter.cpp b/common/src/Utilities/pxWindowTextWriter.cpp
index bae8a02..40daef0 100644
--- a/common/src/Utilities/pxWindowTextWriter.cpp
+++ b/common/src/Utilities/pxWindowTextWriter.cpp
@@ -106,6 +106,13 @@ void pxWindowTextWriter::_DoWriteLn( const wxChar* msg )
 	m_curpos.y += tHeight + m_leading;
 }
 
+#if wxMAJOR_VERSION >= 3
+void pxWindowTextWriter::_DoWriteLn( const wxString msg )
+{
+	_DoWriteLn(msg.wc_str());
+}
+#endif
+
 // Splits incoming multi-line strings into pieces, and dispatches each line individually
 // to the text writer.
 void pxWindowTextWriter::_DoWrite( const wxChar* msg )
@@ -153,3 +160,10 @@ pxWindowTextWriter& pxWindowTextWriter::FormatLn( const wxChar* fmt, ... )
 	return *this;
 }
 
+#if wxMAJOR_VERSION >= 3
+pxWindowTextWriter& pxWindowTextWriter::WriteLn( const wxString fmt )
+{
+	_DoWrite( fmt.wc_str() );
+	return *this;
+}
+#endif
diff --git a/common/src/Utilities/wxAppWithHelpers.cpp b/common/src/Utilities/wxAppWithHelpers.cpp
index 7b87bd8..6092142 100644
--- a/common/src/Utilities/wxAppWithHelpers.cpp
+++ b/common/src/Utilities/wxAppWithHelpers.cpp
@@ -675,7 +675,7 @@ void wxAppWithHelpers::OnDeleteThread( wxCommandEvent& evt )
 		return;
 	}
 
-	pxThreadLog.Write(thr->GetName(), (wxString)L"Thread object deleted successfully" + (thr->HasPendingException() ? L" [exception pending!]" : wxEmptyString));
+	pxThreadLog.Write(thr->GetName(), wxString(wxString(L"Thread object deleted successfully") + (thr->HasPendingException() ? L" [exception pending!]" : L"")).wc_str() );
 	thr->RethrowException();
 }
 
diff --git a/pcsx2/DebugTools/Debug.h b/pcsx2/DebugTools/Debug.h
index 9c73d35..6d2ffa3 100644
--- a/pcsx2/DebugTools/Debug.h
+++ b/pcsx2/DebugTools/Debug.h
@@ -265,6 +265,14 @@ public:
 		Console.WriteRaw( msg );
 		return false;
 	}
+
+#if wxMAJOR_VERSION >= 3
+	bool Write( const wxString msg ) const
+	{
+		return Write(msg.wc_str());
+	}
+#endif
+
 };
 
 // --------------------------------------------------------------------------------------
diff --git a/pcsx2/gui/ExecutorThread.cpp b/pcsx2/gui/ExecutorThread.cpp
index 79d5060..2ab3a07 100644
--- a/pcsx2/gui/ExecutorThread.cpp
+++ b/pcsx2/gui/ExecutorThread.cpp
@@ -211,7 +211,7 @@ void pxEvtQueue::ProcessEvents( pxEvtList& list, bool isIdle )
 			synclock.Release();
 
 			pxEvtLog.Write( this, deleteMe, wxsFormat(L"Executing... [%s]%s",
-				deleteMe->AllowCancelOnExit() ? L"Cancelable" : L"Noncancelable", isIdle ? L"(Idle)" : wxEmptyString)
+				deleteMe->AllowCancelOnExit() ? L"Cancelable" : L"Noncancelable", isIdle ? L"(Idle)" : wxEmptyString).wc_str()
 			);
 
 			if( deleteMe->AllowCancelOnExit() )
@@ -224,7 +224,7 @@ void pxEvtQueue::ProcessEvents( pxEvtList& list, bool isIdle )
 
 			u64 qpc_end = GetCPUTicks();
 			pxEvtLog.Write( this, deleteMe, wxsFormat(L"Event completed in %ums",
-				(u32)(((qpc_end-m_qpc_Start)*1000) / GetTickFrequency()))
+				(u32)(((qpc_end-m_qpc_Start)*1000) / GetTickFrequency())).wc_str()
 			);
 
 			synclock.Acquire();
diff --git a/pcsx2/gui/Panels/GameDatabasePanel.cpp b/pcsx2/gui/Panels/GameDatabasePanel.cpp
index 861e408..b946d82 100644
--- a/pcsx2/gui/Panels/GameDatabasePanel.cpp
+++ b/pcsx2/gui/Panels/GameDatabasePanel.cpp
@@ -445,9 +445,9 @@ bool Panels::GameDatabasePanel::WriteFieldsToDB() {
 		wxString keyName (EnumToString(i)); keyName += L"Hack";
 
 		if (gameFixes[i]->IsIndeterminate())
-			game.deleteKey(keyName);
+			game.deleteKey(keyName.wc_str());
 		else
-			game.writeBool(keyName, gameFixes[i]->GetValue());
+			game.writeBool(keyName.wc_str(), gameFixes[i]->GetValue());
 	}
 	GameDB->updateGame(game);
 	return true;
diff --git a/plugins/spu2-x/src/Linux/CfgHelpers.cpp b/plugins/spu2-x/src/Linux/CfgHelpers.cpp
index db7d592..f326dbd 100644
--- a/plugins/spu2-x/src/Linux/CfgHelpers.cpp
+++ b/plugins/spu2-x/src/Linux/CfgHelpers.cpp
@@ -97,7 +97,7 @@ float CfgReadFloat(const wchar_t* Section, const wchar_t* Name, float Default)
 void CfgReadStr(const wchar_t* Section, const wchar_t* Name, wchar_t* Data, int DataSize, const wchar_t* Default)
 {
 	setIni(Section);
-	wcscpy(Data, spuConfig->Read(Name, Default));
+	wcscpy(Data, spuConfig->Read(Name, Default).wc_str());
 }
 
 void CfgReadStr(const wchar_t* Section, const wchar_t* Name, wxString& Data, const wchar_t* Default)
